/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> 

#define DEFAULT 0
#define LOWER  1
#define RAISE  2
#define ADJUST 3

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ADJ/ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | Ü/ß |
// | CTL/TB  |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ö  | CTL/Ä|
// | SHFT    |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                    | ALT | GUI | LWR/SPC  |   | RSE/ENT | BKSP  | RSE |
     
                        bindings = <
   &lt ADJUST ESC    &kp Q &kp W &kp E &kp R &kp T      &kp Y &kp U  &kp I  &kp O   &kp P    &mt MINUS LBKT
   &mt LCTRL TAB     &kp A &kp S &kp D &kp F &kp G      &kp H &kp J  &kp K  &kp L   &kp SEMI &mt RCTRL SQT
   &kp LSHFT         &kp Z &kp X &kp C &kp V &kp B      &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHIFT 
                 &kp LALT &kp LGUI  &lt LOWER SPACE       &lt RAISE RET &kp BSPC &mo 2 
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// | ADJ/ESC |  !  |  "  |  §  |  $  |  %  |   |  & |  /  |  *  |  )  |  =  |       |
// |         |     |     |     |     |     |   |  * |  #  |  {  |  }  |   ' |  `   |
// | SHFT    |     |     |     |     |     |   |    |  +  |  [  |  ]  |  <  |  >   |
//                    | ALT | GUI | LWR/SPC  |   | RSE/ENT | BKSP  | RSE |

                        bindings = <
   &lt ADJUST ESC  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp LS(N8) &kp LPAR &kp RPAR  &trans
   &trans &trans &trans &trans &trans &trans                     &kp KP_MULTIPLY &kp NON_US_HASH &kp LA(N8) &kp LA(N9)  &kp PIPE &kp PLUS
   &kp LSHIFT &trans &trans &trans &trans &trans                 &trans &kp RBKT   &kp LA(N5) &kp LA(N6) &kp TILDE &kp GRAVE
                 &kp LALT &kp LGUI  &lt LOWER SPACE       &lt RAISE RET &kp BSPC &mo 2 
                       >;  
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// | ADJ/ESC |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// |         | F1  | F2  | F3  | F4  | F5  |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT    | F6  | F7  | F8  | F9  | F10 |   |     |     |     |     |     |      |
//                    | ALT | GUI | LWR/SPC  |   | RSE/ENT | BKSP  | RSE |
                        bindings = <
   &lt ADJUST  ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp BSPC
   &trans &kp F1 &kp F2 &kp F3 &kp F4 &kp F5         &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &kp F6 &kp F7 &kp F8 &kp F9 &kp F10    &trans &trans &trans &trans &trans
                 &kp LALT &kp LGUI  &lt LOWER SPACE       &lt RAISE RET &kp BSPC &mo 2 
                        >;
                };

                adjust_layer {
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |      |     | PREV| PLAY| NEXT|  MUTE | VOLDN | VOLUP| 
// | BT1  | BT2 | BT3 | BT4 | BT5 | BTCLR|     |     |     |     |       | BRID  | BRIU |
// | CAPS |     |     |     |      |     |     |     |     |     |      |
//                | ALT | GUI | LWR/SPC  |   | RSE/ENT | BKSP  | RSE |
                        bindings = <
   
      &trans &trans &trans &trans &trans &trans                                         &kp C_PREV &kp C_PP &kp C_NEXT   &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  
      &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR       &trans &trans &trans &trans &kp C_BRI_DN  &kp C_BRI_UP
      &kp CAPS &trans  &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
                                        &trans &trans &trans                 &trans &trans &trans 
                        >;
                };
        };
}; 